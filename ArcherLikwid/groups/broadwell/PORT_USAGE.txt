SHORT  Execution port utilization

REQUIRE_NOHT

EVENTSET
FIXC0 INSTR_RETIRED_ANY
FIXC1 CPU_CLK_UNHALTED_CORE
FIXC2 CPU_CLK_UNHALTED_REF
PMC0  UOPS_EXECUTED_PORT_PORT_0
PMC1  UOPS_EXECUTED_PORT_PORT_1
PMC2  UOPS_EXECUTED_PORT_PORT_2
PMC3  UOPS_EXECUTED_PORT_PORT_3
PMC4  UOPS_EXECUTED_PORT_PORT_4
PMC5  UOPS_EXECUTED_PORT_PORT_5
PMC6  UOPS_EXECUTED_PORT_PORT_6
PMC7  UOPS_EXECUTED_PORT_PORT_7


METRICS
Runtime (RDTSC) [s] time
Runtime unhalted [s] FIXC1*inverseClock
Clock [MHz]  1.E-06*(FIXC1/FIXC2)/inverseClock
CPI  FIXC1/FIXC0
Port0 usage ratio PMC0/(PMC0+PMC1+PMC2+PMC3+PMC4+PMC5+PMC6+PMC7)
Port1 usage ratio PMC1/(PMC0+PMC1+PMC2+PMC3+PMC4+PMC5+PMC6+PMC7)
Port2 usage ratio PMC2/(PMC0+PMC1+PMC2+PMC3+PMC4+PMC5+PMC6+PMC7)
Port3 usage ratio PMC3/(PMC0+PMC1+PMC2+PMC3+PMC4+PMC5+PMC6+PMC7)
Port4 usage ratio PMC4/(PMC0+PMC1+PMC2+PMC3+PMC4+PMC5+PMC6+PMC7)
Port5 usage ratio PMC5/(PMC0+PMC1+PMC2+PMC3+PMC4+PMC5+PMC6+PMC7)
Port6 usage ratio PMC6/(PMC0+PMC1+PMC2+PMC3+PMC4+PMC5+PMC6+PMC7)
Port7 usage ratio PMC7/(PMC0+PMC1+PMC2+PMC3+PMC4+PMC5+PMC6+PMC7)

LONG
Formulas:
Port0 usage ratio UOPS_EXECUTED_PORT_PORT_0/SUM(UOPS_EXECUTED_PORT_PORT_*)
Port1 usage ratio UOPS_EXECUTED_PORT_PORT_1/SUM(UOPS_EXECUTED_PORT_PORT_*)
Port2 usage ratio UOPS_EXECUTED_PORT_PORT_2/SUM(UOPS_EXECUTED_PORT_PORT_*)
Port3 usage ratio UOPS_EXECUTED_PORT_PORT_3/SUM(UOPS_EXECUTED_PORT_PORT_*)
Port4 usage ratio UOPS_EXECUTED_PORT_PORT_4/SUM(UOPS_EXECUTED_PORT_PORT_*)
Port5 usage ratio UOPS_EXECUTED_PORT_PORT_5/SUM(UOPS_EXECUTED_PORT_PORT_*)
Port6 usage ratio UOPS_EXECUTED_PORT_PORT_6/SUM(UOPS_EXECUTED_PORT_PORT_*)
Port7 usage ratio UOPS_EXECUTED_PORT_PORT_7/SUM(UOPS_EXECUTED_PORT_PORT_*)
-
This group measures the execution port utilization in a CPU core. The group can
only be measured when HyperThreading is disabled because only then each CPU core
can program eight counters.
Please be aware that the counters PMC4-7 are broken on Intel Broadwell. They
don't increment if either user- or kernel-level filtering is applied. User-level
filtering is default in LIKWID, hence kernel-level filtering is added
automatically for PMC4-7. The returned counts can be much higher.
